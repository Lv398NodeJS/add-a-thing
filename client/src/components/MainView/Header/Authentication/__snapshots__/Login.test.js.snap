// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Login should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <UNDEFINED />,
        <ForwardRef
          className="App"
          fluid={false}
        >
          <ForwardRef(render)>
            <ForwardRef
              md={
                Object {
                  "offset": 4,
                  "span": 4,
                }
              }
            >
              <h3>
                Log in to Add a Thing
              </h3>
              <ForwardRef
                className="text-muted"
              >
                <ForwardRef
                  closeLabel="Close alert"
                  show={true}
                  transition={[Function]}
                  variant="secondary"
                >
                  <ForwardRef>
                    NOTE
                  </ForwardRef>
                  <p>
                    If you do not have an account yet, please click on Signup.
                  </p>
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                controlId="formBasicEmail"
              >
                <ForwardRef
                  placeholder="email or username"
                  type="email"
                />
              </ForwardRef>
              <ForwardRef
                controlId="formBasicPassword"
              >
                <ForwardRef
                  placeholder="password"
                  type="password"
                />
              </ForwardRef>
              <React.Fragment>
                <React.Fragment />
              </React.Fragment>
              <ForwardRef
                active={false}
                disabled={false}
                onClick={[Function]}
                size="md"
                type="submit"
                valur="Create New Account"
                variant="primary"
              >
                Log in
              </ForwardRef>
            </ForwardRef>
          </ForwardRef(render)>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(Header)",
          "type": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef(render)>
            <ForwardRef
              md={
                Object {
                  "offset": 4,
                  "span": 4,
                }
              }
            >
              <h3>
                Log in to Add a Thing
              </h3>
              <ForwardRef
                className="text-muted"
              >
                <ForwardRef
                  closeLabel="Close alert"
                  show={true}
                  transition={[Function]}
                  variant="secondary"
                >
                  <ForwardRef>
                    NOTE
                  </ForwardRef>
                  <p>
                    If you do not have an account yet, please click on Signup.
                  </p>
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                controlId="formBasicEmail"
              >
                <ForwardRef
                  placeholder="email or username"
                  type="email"
                />
              </ForwardRef>
              <ForwardRef
                controlId="formBasicPassword"
              >
                <ForwardRef
                  placeholder="password"
                  type="password"
                />
              </ForwardRef>
              <React.Fragment>
                <React.Fragment />
              </React.Fragment>
              <ForwardRef
                active={false}
                disabled={false}
                onClick={[Function]}
                size="md"
                type="submit"
                valur="Create New Account"
                variant="primary"
              >
                Log in
              </ForwardRef>
            </ForwardRef>
          </ForwardRef(render)>,
          "className": "App",
          "fluid": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              md={
                Object {
                  "offset": 4,
                  "span": 4,
                }
              }
            >
              <h3>
                Log in to Add a Thing
              </h3>
              <ForwardRef
                className="text-muted"
              >
                <ForwardRef
                  closeLabel="Close alert"
                  show={true}
                  transition={[Function]}
                  variant="secondary"
                >
                  <ForwardRef>
                    NOTE
                  </ForwardRef>
                  <p>
                    If you do not have an account yet, please click on Signup.
                  </p>
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                controlId="formBasicEmail"
              >
                <ForwardRef
                  placeholder="email or username"
                  type="email"
                />
              </ForwardRef>
              <ForwardRef
                controlId="formBasicPassword"
              >
                <ForwardRef
                  placeholder="password"
                  type="password"
                />
              </ForwardRef>
              <React.Fragment>
                <React.Fragment />
              </React.Fragment>
              <ForwardRef
                active={false}
                disabled={false}
                onClick={[Function]}
                size="md"
                type="submit"
                valur="Create New Account"
                variant="primary"
              >
                Log in
              </ForwardRef>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <h3>
                  Log in to Add a Thing
                </h3>,
                <ForwardRef
                  className="text-muted"
                >
                  <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, please click on Signup.
                    </p>
                  </ForwardRef>
                </ForwardRef>,
                <ForwardRef
                  controlId="formBasicEmail"
                >
                  <ForwardRef
                    placeholder="email or username"
                    type="email"
                  />
                </ForwardRef>,
                <ForwardRef
                  controlId="formBasicPassword"
                >
                  <ForwardRef
                    placeholder="password"
                    type="password"
                  />
                </ForwardRef>,
                <React.Fragment>
                  <React.Fragment />
                </React.Fragment>,
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  size="md"
                  type="submit"
                  valur="Create New Account"
                  variant="primary"
                >
                  Log in
                </ForwardRef>,
              ],
              "md": Object {
                "offset": 4,
                "span": 4,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Log in to Add a Thing",
                },
                "ref": null,
                "rendered": "Log in to Add a Thing",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, please click on Signup.
                    </p>
                  </ForwardRef>,
                  "className": "text-muted",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <ForwardRef>
                        NOTE
                      </ForwardRef>,
                      <p>
                        If you do not have an account yet, please click on Signup.
                      </p>,
                    ],
                    "closeLabel": "Close alert",
                    "show": true,
                    "transition": [Function],
                    "variant": "secondary",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "NOTE",
                      },
                      "ref": null,
                      "rendered": "NOTE",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": undefined,
                        "displayName": "AlertHeading",
                        "render": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "If you do not have an account yet, please click on Signup.",
                      },
                      "ref": null,
                      "rendered": "If you do not have an account yet, please click on Signup.",
                      "type": "p",
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Heading": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": undefined,
                      "displayName": "AlertHeading",
                      "render": [Function],
                    },
                    "Link": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": undefined,
                      "displayName": "AlertLink",
                      "render": [Function],
                    },
                    "defaultProps": Object {
                      "closeLabel": "Close alert",
                      "show": true,
                      "transition": [Function],
                    },
                    "displayName": "Alert",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "FormText",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    placeholder="email or username"
                    type="email"
                  />,
                  "controlId": "formBasicEmail",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "placeholder": "email or username",
                    "type": "email",
                  },
                  "ref": [Function],
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Feedback": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "type": "valid",
                      },
                      "displayName": "Feedback",
                      "propTypes": Object {
                        "as": [Function],
                        "type": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "FormControl",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "FormGroup",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    placeholder="password"
                    type="password"
                  />,
                  "controlId": "formBasicPassword",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "placeholder": "password",
                    "type": "password",
                  },
                  "ref": [Function],
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Feedback": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "type": "valid",
                      },
                      "displayName": "Feedback",
                      "propTypes": Object {
                        "as": [Function],
                        "type": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "FormControl",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "FormGroup",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <React.Fragment />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Symbol(react.fragment),
                },
                "type": Symbol(react.fragment),
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "children": "Log in",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "md",
                  "type": "submit",
                  "valur": "Create New Account",
                  "variant": "primary",
                },
                "ref": null,
                "rendered": "Log in",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "fluid": false,
          },
          "displayName": "Container",
          "render": [Function],
        },
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <UNDEFINED />,
          <ForwardRef
            className="App"
            fluid={false}
          >
            <ForwardRef(render)>
              <ForwardRef
                md={
                  Object {
                    "offset": 4,
                    "span": 4,
                  }
                }
              >
                <h3>
                  Log in to Add a Thing
                </h3>
                <ForwardRef
                  className="text-muted"
                >
                  <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, please click on Signup.
                    </p>
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  controlId="formBasicEmail"
                >
                  <ForwardRef
                    placeholder="email or username"
                    type="email"
                  />
                </ForwardRef>
                <ForwardRef
                  controlId="formBasicPassword"
                >
                  <ForwardRef
                    placeholder="password"
                    type="password"
                  />
                </ForwardRef>
                <React.Fragment>
                  <React.Fragment />
                </React.Fragment>
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  size="md"
                  type="submit"
                  valur="Create New Account"
                  variant="primary"
                >
                  Log in
                </ForwardRef>
              </ForwardRef>
            </ForwardRef(render)>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Header)",
            "type": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef(render)>
              <ForwardRef
                md={
                  Object {
                    "offset": 4,
                    "span": 4,
                  }
                }
              >
                <h3>
                  Log in to Add a Thing
                </h3>
                <ForwardRef
                  className="text-muted"
                >
                  <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, please click on Signup.
                    </p>
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  controlId="formBasicEmail"
                >
                  <ForwardRef
                    placeholder="email or username"
                    type="email"
                  />
                </ForwardRef>
                <ForwardRef
                  controlId="formBasicPassword"
                >
                  <ForwardRef
                    placeholder="password"
                    type="password"
                  />
                </ForwardRef>
                <React.Fragment>
                  <React.Fragment />
                </React.Fragment>
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  size="md"
                  type="submit"
                  valur="Create New Account"
                  variant="primary"
                >
                  Log in
                </ForwardRef>
              </ForwardRef>
            </ForwardRef(render)>,
            "className": "App",
            "fluid": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                md={
                  Object {
                    "offset": 4,
                    "span": 4,
                  }
                }
              >
                <h3>
                  Log in to Add a Thing
                </h3>
                <ForwardRef
                  className="text-muted"
                >
                  <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, please click on Signup.
                    </p>
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  controlId="formBasicEmail"
                >
                  <ForwardRef
                    placeholder="email or username"
                    type="email"
                  />
                </ForwardRef>
                <ForwardRef
                  controlId="formBasicPassword"
                >
                  <ForwardRef
                    placeholder="password"
                    type="password"
                  />
                </ForwardRef>
                <React.Fragment>
                  <React.Fragment />
                </React.Fragment>
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  size="md"
                  type="submit"
                  valur="Create New Account"
                  variant="primary"
                >
                  Log in
                </ForwardRef>
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <h3>
                    Log in to Add a Thing
                  </h3>,
                  <ForwardRef
                    className="text-muted"
                  >
                    <ForwardRef
                      closeLabel="Close alert"
                      show={true}
                      transition={[Function]}
                      variant="secondary"
                    >
                      <ForwardRef>
                        NOTE
                      </ForwardRef>
                      <p>
                        If you do not have an account yet, please click on Signup.
                      </p>
                    </ForwardRef>
                  </ForwardRef>,
                  <ForwardRef
                    controlId="formBasicEmail"
                  >
                    <ForwardRef
                      placeholder="email or username"
                      type="email"
                    />
                  </ForwardRef>,
                  <ForwardRef
                    controlId="formBasicPassword"
                  >
                    <ForwardRef
                      placeholder="password"
                      type="password"
                    />
                  </ForwardRef>,
                  <React.Fragment>
                    <React.Fragment />
                  </React.Fragment>,
                  <ForwardRef
                    active={false}
                    disabled={false}
                    onClick={[Function]}
                    size="md"
                    type="submit"
                    valur="Create New Account"
                    variant="primary"
                  >
                    Log in
                  </ForwardRef>,
                ],
                "md": Object {
                  "offset": 4,
                  "span": 4,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Log in to Add a Thing",
                  },
                  "ref": null,
                  "rendered": "Log in to Add a Thing",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      closeLabel="Close alert"
                      show={true}
                      transition={[Function]}
                      variant="secondary"
                    >
                      <ForwardRef>
                        NOTE
                      </ForwardRef>
                      <p>
                        If you do not have an account yet, please click on Signup.
                      </p>
                    </ForwardRef>,
                    "className": "text-muted",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <ForwardRef>
                          NOTE
                        </ForwardRef>,
                        <p>
                          If you do not have an account yet, please click on Signup.
                        </p>,
                      ],
                      "closeLabel": "Close alert",
                      "show": true,
                      "transition": [Function],
                      "variant": "secondary",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "NOTE",
                        },
                        "ref": null,
                        "rendered": "NOTE",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "defaultProps": undefined,
                          "displayName": "AlertHeading",
                          "render": [Function],
                        },
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "If you do not have an account yet, please click on Signup.",
                        },
                        "ref": null,
                        "rendered": "If you do not have an account yet, please click on Signup.",
                        "type": "p",
                      },
                    ],
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Heading": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": undefined,
                        "displayName": "AlertHeading",
                        "render": [Function],
                      },
                      "Link": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": undefined,
                        "displayName": "AlertLink",
                        "render": [Function],
                      },
                      "defaultProps": Object {
                        "closeLabel": "Close alert",
                        "show": true,
                        "transition": [Function],
                      },
                      "displayName": "Alert",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "FormText",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      placeholder="email or username"
                      type="email"
                    />,
                    "controlId": "formBasicEmail",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "placeholder": "email or username",
                      "type": "email",
                    },
                    "ref": [Function],
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Feedback": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "type": "valid",
                        },
                        "displayName": "Feedback",
                        "propTypes": Object {
                          "as": [Function],
                          "type": [Function],
                        },
                        "render": [Function],
                      },
                      "displayName": "FormControl",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "FormGroup",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      placeholder="password"
                      type="password"
                    />,
                    "controlId": "formBasicPassword",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "placeholder": "password",
                      "type": "password",
                    },
                    "ref": [Function],
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Feedback": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "type": "valid",
                        },
                        "displayName": "Feedback",
                        "propTypes": Object {
                          "as": [Function],
                          "type": [Function],
                        },
                        "render": [Function],
                      },
                      "displayName": "FormControl",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "FormGroup",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <React.Fragment />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": Symbol(react.fragment),
                  },
                  "type": Symbol(react.fragment),
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "active": false,
                    "children": "Log in",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "md",
                    "type": "submit",
                    "valur": "Create New Account",
                    "variant": "primary",
                  },
                  "ref": null,
                  "rendered": "Log in",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "active": false,
                      "disabled": false,
                      "type": "button",
                      "variant": "primary",
                    },
                    "displayName": "Button",
                    "render": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Col",
                "render": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "Bootstrap(Row)",
              "propTypes": undefined,
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "fluid": false,
            },
            "displayName": "Container",
            "render": [Function],
          },
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
