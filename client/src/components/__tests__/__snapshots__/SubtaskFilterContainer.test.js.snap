// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubtaskFilterContainer component should render correctly and match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubtaskFilterContainer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <span>
          Show: 
        </span>,
        <ForwardRef
          role="group"
          toggle={false}
          vertical={false}
        >
          <UNDEFINED
            filterType="SHOW_ALL"
          />
          <UNDEFINED
            filterType="SHOW_ACTIVE"
          />
          <UNDEFINED
            filterType="SHOW_COMPLETED"
          />
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Show: ",
        },
        "ref": null,
        "rendered": "Show: ",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <UNDEFINED
              filterType="SHOW_ALL"
            />,
            <UNDEFINED
              filterType="SHOW_ACTIVE"
            />,
            <UNDEFINED
              filterType="SHOW_COMPLETED"
            />,
          ],
          "role": "group",
          "toggle": false,
          "vertical": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterType": "SHOW_ALL",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(SubtaskFilterButton)",
              "type": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterType": "SHOW_ACTIVE",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(SubtaskFilterButton)",
              "type": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterType": "SHOW_COMPLETED",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(SubtaskFilterButton)",
              "type": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "role": "group",
            "toggle": false,
            "vertical": false,
          },
          "displayName": "ButtonGroup",
          "render": [Function],
        },
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <span>
            Show: 
          </span>,
          <ForwardRef
            role="group"
            toggle={false}
            vertical={false}
          >
            <UNDEFINED
              filterType="SHOW_ALL"
            />
            <UNDEFINED
              filterType="SHOW_ACTIVE"
            />
            <UNDEFINED
              filterType="SHOW_COMPLETED"
            />
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Show: ",
          },
          "ref": null,
          "rendered": "Show: ",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <UNDEFINED
                filterType="SHOW_ALL"
              />,
              <UNDEFINED
                filterType="SHOW_ACTIVE"
              />,
              <UNDEFINED
                filterType="SHOW_COMPLETED"
              />,
            ],
            "role": "group",
            "toggle": false,
            "vertical": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterType": "SHOW_ALL",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(SubtaskFilterButton)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterType": "SHOW_ACTIVE",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(SubtaskFilterButton)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterType": "SHOW_COMPLETED",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(SubtaskFilterButton)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "role": "group",
              "toggle": false,
              "vertical": false,
            },
            "displayName": "ButtonGroup",
            "render": [Function],
          },
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
