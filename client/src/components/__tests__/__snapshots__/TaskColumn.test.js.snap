// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TaskColumn /> should render and match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TasksColumn
    filteredTasks={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="tasks-column-invalid-title"
          data-test="columnTitle"
        >
          <UNDEFINED
            color="#4e1aeb"
            storageKey=":undefined"
          />
        </h1>,
        <ForwardRef
          className="task-items-container h-100 px-4 pb-4"
          data-test="taskItemsContainer"
          fluid="true"
          onDragOver={[Function]}
          onDrop={[Function]}
        />,
      ],
      "className": "tasks-column rounded mb-4 mb-lg-0",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            <UNDEFINED
              color="#4e1aeb"
              storageKey=":undefined"
            />,
          ],
          "className": "tasks-column-invalid-title",
          "data-test": "columnTitle",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "#4e1aeb",
              "storageKey": ":undefined",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(SortList)",
              "type": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [],
          "className": "task-items-container h-100 px-4 pb-4",
          "data-status": undefined,
          "data-test": "taskItemsContainer",
          "fluid": "true",
          "onDragOver": [Function],
          "onDrop": [Function],
          "status": undefined,
        },
        "ref": null,
        "rendered": Array [],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "fluid": false,
          },
          "displayName": "Container",
          "render": [Function],
        },
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="tasks-column-invalid-title"
            data-test="columnTitle"
          >
            <UNDEFINED
              color="#4e1aeb"
              storageKey=":undefined"
            />
          </h1>,
          <ForwardRef
            className="task-items-container h-100 px-4 pb-4"
            data-test="taskItemsContainer"
            fluid="true"
            onDragOver={[Function]}
            onDrop={[Function]}
          />,
        ],
        "className": "tasks-column rounded mb-4 mb-lg-0",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              <UNDEFINED
                color="#4e1aeb"
                storageKey=":undefined"
              />,
            ],
            "className": "tasks-column-invalid-title",
            "data-test": "columnTitle",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "#4e1aeb",
                "storageKey": ":undefined",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(SortList)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [],
            "className": "task-items-container h-100 px-4 pb-4",
            "data-status": undefined,
            "data-test": "taskItemsContainer",
            "fluid": "true",
            "onDragOver": [Function],
            "onDrop": [Function],
            "status": undefined,
          },
          "ref": null,
          "rendered": Array [],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "fluid": false,
            },
            "displayName": "Container",
            "render": [Function],
          },
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
