// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup Login should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Blueprint3.Toaster
          autoFocus={false}
          canEscapeKeyClear={true}
          position="top"
          usePortal={true}
        />,
        <NavBar />,
        <ForwardRef
          as="div"
          className="App"
          fluid={false}
        >
          <ForwardRef(render)>
            <ForwardRef
              as="div"
              md={
                Object {
                  "offset": 4,
                  "span": 4,
                }
              }
            >
              <ForwardRef
                as="form"
                inline={false}
                onSubmit={[Function]}
              >
                <h3>
                  Log in to Add a Thing
                </h3>
                <ForwardRef
                  as="small"
                  className="text-muted"
                >
                  <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, this form will create an account for you.
                    </p>
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  as="div"
                  controlId="formBasicEmail"
                >
                  <ForwardRef
                    as="input"
                    placeholder="email or username"
                    type="email"
                  />
                </ForwardRef>
                <ForwardRef
                  as="div"
                  controlId="formBasicPassword"
                >
                  <ForwardRef
                    as="input"
                    placeholder="password"
                    type="password"
                  />
                </ForwardRef>
                <ForwardRef
                  active={false}
                  block={true}
                  disabled={false}
                  size="md"
                  type="submit"
                  valur="Log In"
                  variant="primary"
                >
                  Log in
                </ForwardRef>
              </ForwardRef>
              <div
                className="d-flex flex-column"
              >
                <ForwardRef
                  as="div"
                  className="mt-2"
                  role="group"
                  toggle={true}
                  vertical={false}
                >
                  <ForwardRef
                    defaultChecked={true}
                    name="radio"
                    onClick={[Function]}
                    type="radio"
                    value="1"
                  >
                    Log in with Google
                  </ForwardRef>
                  <ForwardRef
                    name="radio"
                    onClick={[Function]}
                    type="radio"
                    value="2"
                  >
                    Log in with Facebook
                  </ForwardRef>
                </ForwardRef>
              </div>
            </ForwardRef>
          </ForwardRef(render)>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": false,
          "canEscapeKeyClear": true,
          "position": "top",
          "usePortal": true,
        },
        "ref": [Function],
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "isLoggedIn": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "div",
          "children": <ForwardRef(render)>
            <ForwardRef
              as="div"
              md={
                Object {
                  "offset": 4,
                  "span": 4,
                }
              }
            >
              <ForwardRef
                as="form"
                inline={false}
                onSubmit={[Function]}
              >
                <h3>
                  Log in to Add a Thing
                </h3>
                <ForwardRef
                  as="small"
                  className="text-muted"
                >
                  <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, this form will create an account for you.
                    </p>
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  as="div"
                  controlId="formBasicEmail"
                >
                  <ForwardRef
                    as="input"
                    placeholder="email or username"
                    type="email"
                  />
                </ForwardRef>
                <ForwardRef
                  as="div"
                  controlId="formBasicPassword"
                >
                  <ForwardRef
                    as="input"
                    placeholder="password"
                    type="password"
                  />
                </ForwardRef>
                <ForwardRef
                  active={false}
                  block={true}
                  disabled={false}
                  size="md"
                  type="submit"
                  valur="Log In"
                  variant="primary"
                >
                  Log in
                </ForwardRef>
              </ForwardRef>
              <div
                className="d-flex flex-column"
              >
                <ForwardRef
                  as="div"
                  className="mt-2"
                  role="group"
                  toggle={true}
                  vertical={false}
                >
                  <ForwardRef
                    defaultChecked={true}
                    name="radio"
                    onClick={[Function]}
                    type="radio"
                    value="1"
                  >
                    Log in with Google
                  </ForwardRef>
                  <ForwardRef
                    name="radio"
                    onClick={[Function]}
                    type="radio"
                    value="2"
                  >
                    Log in with Facebook
                  </ForwardRef>
                </ForwardRef>
              </div>
            </ForwardRef>
          </ForwardRef(render)>,
          "className": "App",
          "fluid": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              as="div"
              md={
                Object {
                  "offset": 4,
                  "span": 4,
                }
              }
            >
              <ForwardRef
                as="form"
                inline={false}
                onSubmit={[Function]}
              >
                <h3>
                  Log in to Add a Thing
                </h3>
                <ForwardRef
                  as="small"
                  className="text-muted"
                >
                  <ForwardRef
                    closeLabel="Close alert"
                    show={true}
                    transition={[Function]}
                    variant="secondary"
                  >
                    <ForwardRef>
                      NOTE
                    </ForwardRef>
                    <p>
                      If you do not have an account yet, this form will create an account for you.
                    </p>
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  as="div"
                  controlId="formBasicEmail"
                >
                  <ForwardRef
                    as="input"
                    placeholder="email or username"
                    type="email"
                  />
                </ForwardRef>
                <ForwardRef
                  as="div"
                  controlId="formBasicPassword"
                >
                  <ForwardRef
                    as="input"
                    placeholder="password"
                    type="password"
                  />
                </ForwardRef>
                <ForwardRef
                  active={false}
                  block={true}
                  disabled={false}
                  size="md"
                  type="submit"
                  valur="Log In"
                  variant="primary"
                >
                  Log in
                </ForwardRef>
              </ForwardRef>
              <div
                className="d-flex flex-column"
              >
                <ForwardRef
                  as="div"
                  className="mt-2"
                  role="group"
                  toggle={true}
                  vertical={false}
                >
                  <ForwardRef
                    defaultChecked={true}
                    name="radio"
                    onClick={[Function]}
                    type="radio"
                    value="1"
                  >
                    Log in with Google
                  </ForwardRef>
                  <ForwardRef
                    name="radio"
                    onClick={[Function]}
                    type="radio"
                    value="2"
                  >
                    Log in with Facebook
                  </ForwardRef>
                </ForwardRef>
              </div>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": Array [
                <ForwardRef
                  as="form"
                  inline={false}
                  onSubmit={[Function]}
                >
                  <h3>
                    Log in to Add a Thing
                  </h3>
                  <ForwardRef
                    as="small"
                    className="text-muted"
                  >
                    <ForwardRef
                      closeLabel="Close alert"
                      show={true}
                      transition={[Function]}
                      variant="secondary"
                    >
                      <ForwardRef>
                        NOTE
                      </ForwardRef>
                      <p>
                        If you do not have an account yet, this form will create an account for you.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicEmail"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="email or username"
                      type="email"
                    />
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicPassword"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="password"
                      type="password"
                    />
                  </ForwardRef>
                  <ForwardRef
                    active={false}
                    block={true}
                    disabled={false}
                    size="md"
                    type="submit"
                    valur="Log In"
                    variant="primary"
                  >
                    Log in
                  </ForwardRef>
                </ForwardRef>,
                <div
                  className="d-flex flex-column"
                >
                  <ForwardRef
                    as="div"
                    className="mt-2"
                    role="group"
                    toggle={true}
                    vertical={false}
                  >
                    <ForwardRef
                      defaultChecked={true}
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="1"
                    >
                      Log in with Google
                    </ForwardRef>
                    <ForwardRef
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="2"
                    >
                      Log in with Facebook
                    </ForwardRef>
                  </ForwardRef>
                </div>,
              ],
              "md": Object {
                "offset": 4,
                "span": 4,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "form",
                  "children": Array [
                    <h3>
                      Log in to Add a Thing
                    </h3>,
                    <ForwardRef
                      as="small"
                      className="text-muted"
                    >
                      <ForwardRef
                        closeLabel="Close alert"
                        show={true}
                        transition={[Function]}
                        variant="secondary"
                      >
                        <ForwardRef>
                          NOTE
                        </ForwardRef>
                        <p>
                          If you do not have an account yet, this form will create an account for you.
                        </p>
                      </ForwardRef>
                    </ForwardRef>,
                    <ForwardRef
                      as="div"
                      controlId="formBasicEmail"
                    >
                      <ForwardRef
                        as="input"
                        placeholder="email or username"
                        type="email"
                      />
                    </ForwardRef>,
                    <ForwardRef
                      as="div"
                      controlId="formBasicPassword"
                    >
                      <ForwardRef
                        as="input"
                        placeholder="password"
                        type="password"
                      />
                    </ForwardRef>,
                    <ForwardRef
                      active={false}
                      block={true}
                      disabled={false}
                      size="md"
                      type="submit"
                      valur="Log In"
                      variant="primary"
                    >
                      Log in
                    </ForwardRef>,
                  ],
                  "inline": false,
                  "onSubmit": [Function],
                },
                "ref": [Function],
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Log in to Add a Thing",
                    },
                    "ref": null,
                    "rendered": "Log in to Add a Thing",
                    "type": "h3",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "small",
                      "children": <ForwardRef
                        closeLabel="Close alert"
                        show={true}
                        transition={[Function]}
                        variant="secondary"
                      >
                        <ForwardRef>
                          NOTE
                        </ForwardRef>
                        <p>
                          If you do not have an account yet, this form will create an account for you.
                        </p>
                      </ForwardRef>,
                      "className": "text-muted",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <ForwardRef>
                            NOTE
                          </ForwardRef>,
                          <p>
                            If you do not have an account yet, this form will create an account for you.
                          </p>,
                        ],
                        "closeLabel": "Close alert",
                        "show": true,
                        "transition": [Function],
                        "variant": "secondary",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": "NOTE",
                          },
                          "ref": null,
                          "rendered": "NOTE",
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "defaultProps": undefined,
                            "displayName": "AlertHeading",
                            "render": [Function],
                          },
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "If you do not have an account yet, this form will create an account for you.",
                          },
                          "ref": null,
                          "rendered": "If you do not have an account yet, this form will create an account for you.",
                          "type": "p",
                        },
                      ],
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Heading": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "defaultProps": undefined,
                          "displayName": "AlertHeading",
                          "render": [Function],
                        },
                        "Link": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "defaultProps": undefined,
                          "displayName": "AlertLink",
                          "render": [Function],
                        },
                        "defaultProps": Object {
                          "closeLabel": "Close alert",
                          "show": true,
                          "transition": [Function],
                        },
                        "displayName": "Alert",
                        "render": [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "small",
                      },
                      "displayName": "FormText",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "div",
                      "children": <ForwardRef
                        as="input"
                        placeholder="email or username"
                        type="email"
                      />,
                      "controlId": "formBasicEmail",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "input",
                        "placeholder": "email or username",
                        "type": "email",
                      },
                      "ref": [Function],
                      "rendered": null,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Feedback": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "defaultProps": Object {
                            "as": "div",
                            "type": "valid",
                          },
                          "displayName": "Feedback",
                          "propTypes": Object {
                            "as": [Function],
                            "type": [Function],
                          },
                          "render": [Function],
                        },
                        "defaultProps": Object {
                          "as": "input",
                        },
                        "displayName": "FormControl",
                        "render": [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                      },
                      "displayName": "FormGroup",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "div",
                      "children": <ForwardRef
                        as="input"
                        placeholder="password"
                        type="password"
                      />,
                      "controlId": "formBasicPassword",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "input",
                        "placeholder": "password",
                        "type": "password",
                      },
                      "ref": [Function],
                      "rendered": null,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Feedback": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "defaultProps": Object {
                            "as": "div",
                            "type": "valid",
                          },
                          "displayName": "Feedback",
                          "propTypes": Object {
                            "as": [Function],
                            "type": [Function],
                          },
                          "render": [Function],
                        },
                        "defaultProps": Object {
                          "as": "input",
                        },
                        "displayName": "FormControl",
                        "render": [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                      },
                      "displayName": "FormGroup",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "active": false,
                      "block": true,
                      "children": "Log in",
                      "disabled": false,
                      "size": "md",
                      "type": "submit",
                      "valur": "Log In",
                      "variant": "primary",
                    },
                    "ref": null,
                    "rendered": "Log in",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "active": false,
                        "disabled": false,
                        "type": "button",
                        "variant": "primary",
                      },
                      "displayName": "Button",
                      "render": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Check": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Input": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "type": "checkbox",
                      },
                      "displayName": "FormCheckInput",
                      "render": [Function],
                    },
                    "Label": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "type": "checkbox",
                      },
                      "displayName": "FormCheckLabel",
                      "render": [Function],
                    },
                    "defaultProps": Object {
                      "disabled": false,
                      "inline": false,
                      "isInvalid": false,
                      "isValid": false,
                      "title": "",
                      "type": "checkbox",
                    },
                    "displayName": "FormCheck",
                    "render": [Function],
                  },
                  "Control": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Feedback": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                        "type": "valid",
                      },
                      "displayName": "Feedback",
                      "propTypes": Object {
                        "as": [Function],
                        "type": [Function],
                      },
                      "render": [Function],
                    },
                    "defaultProps": Object {
                      "as": "input",
                    },
                    "displayName": "FormControl",
                    "render": [Function],
                  },
                  "Group": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                    },
                    "displayName": "FormGroup",
                    "render": [Function],
                  },
                  "Label": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "column": false,
                      "srOnly": false,
                    },
                    "displayName": "FormLabel",
                    "render": [Function],
                  },
                  "Row": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "FormRow",
                    "render": [Function],
                  },
                  "Text": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "small",
                    },
                    "displayName": "FormText",
                    "render": [Function],
                  },
                  "defaultProps": Object {
                    "as": "form",
                    "inline": false,
                  },
                  "displayName": "Form",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ForwardRef
                    as="div"
                    className="mt-2"
                    role="group"
                    toggle={true}
                    vertical={false}
                  >
                    <ForwardRef
                      defaultChecked={true}
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="1"
                    >
                      Log in with Google
                    </ForwardRef>
                    <ForwardRef
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="2"
                    >
                      Log in with Facebook
                    </ForwardRef>
                  </ForwardRef>,
                  "className": "d-flex flex-column",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "div",
                    "children": Array [
                      <ForwardRef
                        defaultChecked={true}
                        name="radio"
                        onClick={[Function]}
                        type="radio"
                        value="1"
                      >
                        Log in with Google
                      </ForwardRef>,
                      <ForwardRef
                        name="radio"
                        onClick={[Function]}
                        type="radio"
                        value="2"
                      >
                        Log in with Facebook
                      </ForwardRef>,
                    ],
                    "className": "mt-2",
                    "role": "group",
                    "toggle": true,
                    "vertical": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Log in with Google",
                        "defaultChecked": true,
                        "name": "radio",
                        "onClick": [Function],
                        "type": "radio",
                        "value": "1",
                      },
                      "ref": null,
                      "rendered": "Log in with Google",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Log in with Facebook",
                        "name": "radio",
                        "onClick": [Function],
                        "type": "radio",
                        "value": "2",
                      },
                      "ref": null,
                      "rendered": "Log in with Facebook",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                      "role": "group",
                      "toggle": false,
                      "vertical": false,
                    },
                    "displayName": "ButtonGroup",
                    "render": [Function],
                  },
                },
                "type": "div",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "Bootstrap(Row)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
            "fluid": false,
          },
          "displayName": "Container",
          "render": [Function],
        },
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Blueprint3.Toaster
            autoFocus={false}
            canEscapeKeyClear={true}
            position="top"
            usePortal={true}
          />,
          <NavBar />,
          <ForwardRef
            as="div"
            className="App"
            fluid={false}
          >
            <ForwardRef(render)>
              <ForwardRef
                as="div"
                md={
                  Object {
                    "offset": 4,
                    "span": 4,
                  }
                }
              >
                <ForwardRef
                  as="form"
                  inline={false}
                  onSubmit={[Function]}
                >
                  <h3>
                    Log in to Add a Thing
                  </h3>
                  <ForwardRef
                    as="small"
                    className="text-muted"
                  >
                    <ForwardRef
                      closeLabel="Close alert"
                      show={true}
                      transition={[Function]}
                      variant="secondary"
                    >
                      <ForwardRef>
                        NOTE
                      </ForwardRef>
                      <p>
                        If you do not have an account yet, this form will create an account for you.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicEmail"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="email or username"
                      type="email"
                    />
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicPassword"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="password"
                      type="password"
                    />
                  </ForwardRef>
                  <ForwardRef
                    active={false}
                    block={true}
                    disabled={false}
                    size="md"
                    type="submit"
                    valur="Log In"
                    variant="primary"
                  >
                    Log in
                  </ForwardRef>
                </ForwardRef>
                <div
                  className="d-flex flex-column"
                >
                  <ForwardRef
                    as="div"
                    className="mt-2"
                    role="group"
                    toggle={true}
                    vertical={false}
                  >
                    <ForwardRef
                      defaultChecked={true}
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="1"
                    >
                      Log in with Google
                    </ForwardRef>
                    <ForwardRef
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="2"
                    >
                      Log in with Facebook
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </ForwardRef>
            </ForwardRef(render)>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocus": false,
            "canEscapeKeyClear": true,
            "position": "top",
            "usePortal": true,
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "isLoggedIn": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <ForwardRef(render)>
              <ForwardRef
                as="div"
                md={
                  Object {
                    "offset": 4,
                    "span": 4,
                  }
                }
              >
                <ForwardRef
                  as="form"
                  inline={false}
                  onSubmit={[Function]}
                >
                  <h3>
                    Log in to Add a Thing
                  </h3>
                  <ForwardRef
                    as="small"
                    className="text-muted"
                  >
                    <ForwardRef
                      closeLabel="Close alert"
                      show={true}
                      transition={[Function]}
                      variant="secondary"
                    >
                      <ForwardRef>
                        NOTE
                      </ForwardRef>
                      <p>
                        If you do not have an account yet, this form will create an account for you.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicEmail"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="email or username"
                      type="email"
                    />
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicPassword"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="password"
                      type="password"
                    />
                  </ForwardRef>
                  <ForwardRef
                    active={false}
                    block={true}
                    disabled={false}
                    size="md"
                    type="submit"
                    valur="Log In"
                    variant="primary"
                  >
                    Log in
                  </ForwardRef>
                </ForwardRef>
                <div
                  className="d-flex flex-column"
                >
                  <ForwardRef
                    as="div"
                    className="mt-2"
                    role="group"
                    toggle={true}
                    vertical={false}
                  >
                    <ForwardRef
                      defaultChecked={true}
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="1"
                    >
                      Log in with Google
                    </ForwardRef>
                    <ForwardRef
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="2"
                    >
                      Log in with Facebook
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </ForwardRef>
            </ForwardRef(render)>,
            "className": "App",
            "fluid": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                as="div"
                md={
                  Object {
                    "offset": 4,
                    "span": 4,
                  }
                }
              >
                <ForwardRef
                  as="form"
                  inline={false}
                  onSubmit={[Function]}
                >
                  <h3>
                    Log in to Add a Thing
                  </h3>
                  <ForwardRef
                    as="small"
                    className="text-muted"
                  >
                    <ForwardRef
                      closeLabel="Close alert"
                      show={true}
                      transition={[Function]}
                      variant="secondary"
                    >
                      <ForwardRef>
                        NOTE
                      </ForwardRef>
                      <p>
                        If you do not have an account yet, this form will create an account for you.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicEmail"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="email or username"
                      type="email"
                    />
                  </ForwardRef>
                  <ForwardRef
                    as="div"
                    controlId="formBasicPassword"
                  >
                    <ForwardRef
                      as="input"
                      placeholder="password"
                      type="password"
                    />
                  </ForwardRef>
                  <ForwardRef
                    active={false}
                    block={true}
                    disabled={false}
                    size="md"
                    type="submit"
                    valur="Log In"
                    variant="primary"
                  >
                    Log in
                  </ForwardRef>
                </ForwardRef>
                <div
                  className="d-flex flex-column"
                >
                  <ForwardRef
                    as="div"
                    className="mt-2"
                    role="group"
                    toggle={true}
                    vertical={false}
                  >
                    <ForwardRef
                      defaultChecked={true}
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="1"
                    >
                      Log in with Google
                    </ForwardRef>
                    <ForwardRef
                      name="radio"
                      onClick={[Function]}
                      type="radio"
                      value="2"
                    >
                      Log in with Facebook
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "div",
                "children": Array [
                  <ForwardRef
                    as="form"
                    inline={false}
                    onSubmit={[Function]}
                  >
                    <h3>
                      Log in to Add a Thing
                    </h3>
                    <ForwardRef
                      as="small"
                      className="text-muted"
                    >
                      <ForwardRef
                        closeLabel="Close alert"
                        show={true}
                        transition={[Function]}
                        variant="secondary"
                      >
                        <ForwardRef>
                          NOTE
                        </ForwardRef>
                        <p>
                          If you do not have an account yet, this form will create an account for you.
                        </p>
                      </ForwardRef>
                    </ForwardRef>
                    <ForwardRef
                      as="div"
                      controlId="formBasicEmail"
                    >
                      <ForwardRef
                        as="input"
                        placeholder="email or username"
                        type="email"
                      />
                    </ForwardRef>
                    <ForwardRef
                      as="div"
                      controlId="formBasicPassword"
                    >
                      <ForwardRef
                        as="input"
                        placeholder="password"
                        type="password"
                      />
                    </ForwardRef>
                    <ForwardRef
                      active={false}
                      block={true}
                      disabled={false}
                      size="md"
                      type="submit"
                      valur="Log In"
                      variant="primary"
                    >
                      Log in
                    </ForwardRef>
                  </ForwardRef>,
                  <div
                    className="d-flex flex-column"
                  >
                    <ForwardRef
                      as="div"
                      className="mt-2"
                      role="group"
                      toggle={true}
                      vertical={false}
                    >
                      <ForwardRef
                        defaultChecked={true}
                        name="radio"
                        onClick={[Function]}
                        type="radio"
                        value="1"
                      >
                        Log in with Google
                      </ForwardRef>
                      <ForwardRef
                        name="radio"
                        onClick={[Function]}
                        type="radio"
                        value="2"
                      >
                        Log in with Facebook
                      </ForwardRef>
                    </ForwardRef>
                  </div>,
                ],
                "md": Object {
                  "offset": 4,
                  "span": 4,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "form",
                    "children": Array [
                      <h3>
                        Log in to Add a Thing
                      </h3>,
                      <ForwardRef
                        as="small"
                        className="text-muted"
                      >
                        <ForwardRef
                          closeLabel="Close alert"
                          show={true}
                          transition={[Function]}
                          variant="secondary"
                        >
                          <ForwardRef>
                            NOTE
                          </ForwardRef>
                          <p>
                            If you do not have an account yet, this form will create an account for you.
                          </p>
                        </ForwardRef>
                      </ForwardRef>,
                      <ForwardRef
                        as="div"
                        controlId="formBasicEmail"
                      >
                        <ForwardRef
                          as="input"
                          placeholder="email or username"
                          type="email"
                        />
                      </ForwardRef>,
                      <ForwardRef
                        as="div"
                        controlId="formBasicPassword"
                      >
                        <ForwardRef
                          as="input"
                          placeholder="password"
                          type="password"
                        />
                      </ForwardRef>,
                      <ForwardRef
                        active={false}
                        block={true}
                        disabled={false}
                        size="md"
                        type="submit"
                        valur="Log In"
                        variant="primary"
                      >
                        Log in
                      </ForwardRef>,
                    ],
                    "inline": false,
                    "onSubmit": [Function],
                  },
                  "ref": [Function],
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Log in to Add a Thing",
                      },
                      "ref": null,
                      "rendered": "Log in to Add a Thing",
                      "type": "h3",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "small",
                        "children": <ForwardRef
                          closeLabel="Close alert"
                          show={true}
                          transition={[Function]}
                          variant="secondary"
                        >
                          <ForwardRef>
                            NOTE
                          </ForwardRef>
                          <p>
                            If you do not have an account yet, this form will create an account for you.
                          </p>
                        </ForwardRef>,
                        "className": "text-muted",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            <ForwardRef>
                              NOTE
                            </ForwardRef>,
                            <p>
                              If you do not have an account yet, this form will create an account for you.
                            </p>,
                          ],
                          "closeLabel": "Close alert",
                          "show": true,
                          "transition": [Function],
                          "variant": "secondary",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": "NOTE",
                            },
                            "ref": null,
                            "rendered": "NOTE",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "defaultProps": undefined,
                              "displayName": "AlertHeading",
                              "render": [Function],
                            },
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "If you do not have an account yet, this form will create an account for you.",
                            },
                            "ref": null,
                            "rendered": "If you do not have an account yet, this form will create an account for you.",
                            "type": "p",
                          },
                        ],
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "Heading": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "defaultProps": undefined,
                            "displayName": "AlertHeading",
                            "render": [Function],
                          },
                          "Link": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "defaultProps": undefined,
                            "displayName": "AlertLink",
                            "render": [Function],
                          },
                          "defaultProps": Object {
                            "closeLabel": "Close alert",
                            "show": true,
                            "transition": [Function],
                          },
                          "displayName": "Alert",
                          "render": [Function],
                        },
                      },
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "as": "small",
                        },
                        "displayName": "FormText",
                        "render": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "div",
                        "children": <ForwardRef
                          as="input"
                          placeholder="email or username"
                          type="email"
                        />,
                        "controlId": "formBasicEmail",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "input",
                          "placeholder": "email or username",
                          "type": "email",
                        },
                        "ref": [Function],
                        "rendered": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "Feedback": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "defaultProps": Object {
                              "as": "div",
                              "type": "valid",
                            },
                            "displayName": "Feedback",
                            "propTypes": Object {
                              "as": [Function],
                              "type": [Function],
                            },
                            "render": [Function],
                          },
                          "defaultProps": Object {
                            "as": "input",
                          },
                          "displayName": "FormControl",
                          "render": [Function],
                        },
                      },
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "as": "div",
                        },
                        "displayName": "FormGroup",
                        "render": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "div",
                        "children": <ForwardRef
                          as="input"
                          placeholder="password"
                          type="password"
                        />,
                        "controlId": "formBasicPassword",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "input",
                          "placeholder": "password",
                          "type": "password",
                        },
                        "ref": [Function],
                        "rendered": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "Feedback": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "defaultProps": Object {
                              "as": "div",
                              "type": "valid",
                            },
                            "displayName": "Feedback",
                            "propTypes": Object {
                              "as": [Function],
                              "type": [Function],
                            },
                            "render": [Function],
                          },
                          "defaultProps": Object {
                            "as": "input",
                          },
                          "displayName": "FormControl",
                          "render": [Function],
                        },
                      },
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "as": "div",
                        },
                        "displayName": "FormGroup",
                        "render": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "active": false,
                        "block": true,
                        "children": "Log in",
                        "disabled": false,
                        "size": "md",
                        "type": "submit",
                        "valur": "Log In",
                        "variant": "primary",
                      },
                      "ref": null,
                      "rendered": "Log in",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "active": false,
                          "disabled": false,
                          "type": "button",
                          "variant": "primary",
                        },
                        "displayName": "Button",
                        "render": [Function],
                      },
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Check": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Input": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "type": "checkbox",
                        },
                        "displayName": "FormCheckInput",
                        "render": [Function],
                      },
                      "Label": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "type": "checkbox",
                        },
                        "displayName": "FormCheckLabel",
                        "render": [Function],
                      },
                      "defaultProps": Object {
                        "disabled": false,
                        "inline": false,
                        "isInvalid": false,
                        "isValid": false,
                        "title": "",
                        "type": "checkbox",
                      },
                      "displayName": "FormCheck",
                      "render": [Function],
                    },
                    "Control": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Feedback": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "as": "div",
                          "type": "valid",
                        },
                        "displayName": "Feedback",
                        "propTypes": Object {
                          "as": [Function],
                          "type": [Function],
                        },
                        "render": [Function],
                      },
                      "defaultProps": Object {
                        "as": "input",
                      },
                      "displayName": "FormControl",
                      "render": [Function],
                    },
                    "Group": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                      },
                      "displayName": "FormGroup",
                      "render": [Function],
                    },
                    "Label": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "column": false,
                        "srOnly": false,
                      },
                      "displayName": "FormLabel",
                      "render": [Function],
                    },
                    "Row": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": undefined,
                      "displayName": "FormRow",
                      "render": [Function],
                    },
                    "Text": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "small",
                      },
                      "displayName": "FormText",
                      "render": [Function],
                    },
                    "defaultProps": Object {
                      "as": "form",
                      "inline": false,
                    },
                    "displayName": "Form",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <ForwardRef
                      as="div"
                      className="mt-2"
                      role="group"
                      toggle={true}
                      vertical={false}
                    >
                      <ForwardRef
                        defaultChecked={true}
                        name="radio"
                        onClick={[Function]}
                        type="radio"
                        value="1"
                      >
                        Log in with Google
                      </ForwardRef>
                      <ForwardRef
                        name="radio"
                        onClick={[Function]}
                        type="radio"
                        value="2"
                      >
                        Log in with Facebook
                      </ForwardRef>
                    </ForwardRef>,
                    "className": "d-flex flex-column",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "div",
                      "children": Array [
                        <ForwardRef
                          defaultChecked={true}
                          name="radio"
                          onClick={[Function]}
                          type="radio"
                          value="1"
                        >
                          Log in with Google
                        </ForwardRef>,
                        <ForwardRef
                          name="radio"
                          onClick={[Function]}
                          type="radio"
                          value="2"
                        >
                          Log in with Facebook
                        </ForwardRef>,
                      ],
                      "className": "mt-2",
                      "role": "group",
                      "toggle": true,
                      "vertical": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "Log in with Google",
                          "defaultChecked": true,
                          "name": "radio",
                          "onClick": [Function],
                          "type": "radio",
                          "value": "1",
                        },
                        "ref": null,
                        "rendered": "Log in with Google",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "Log in with Facebook",
                          "name": "radio",
                          "onClick": [Function],
                          "type": "radio",
                          "value": "2",
                        },
                        "ref": null,
                        "rendered": "Log in with Facebook",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                    ],
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                        "role": "group",
                        "toggle": false,
                        "vertical": false,
                      },
                      "displayName": "ButtonGroup",
                      "render": [Function],
                    },
                  },
                  "type": "div",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "as": "div",
                },
                "displayName": "Col",
                "render": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "Bootstrap(Row)",
              "propTypes": undefined,
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
              "fluid": false,
            },
            "displayName": "Container",
            "render": [Function],
          },
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
