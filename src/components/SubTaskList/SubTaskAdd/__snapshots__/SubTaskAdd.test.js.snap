// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubTaskAdd component should render correctly and match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubTaskAdd />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef
        as="div"
        className="px-0"
      >
        <ForwardRef(render)>
          <ForwardRef>
            <ForwardRef
              active={false}
              as="input"
              className="add-subtask-button"
              disabled={false}
              onClick={[Function]}
              size="sm"
              type="button"
              value="+"
              variant="outline-success"
            />
          </ForwardRef>
          <ForwardRef
            as="input"
            className="new-subtask-text"
            disabled={false}
            maxLength={40}
            minLength={1}
            onKeyPress={[Function]}
            placeholder="Enter subtask text here..."
            size="sm"
          />
        </ForwardRef(render)>
      </ForwardRef>,
      "className": "mb-0 mt-3 mx-0",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "children": <ForwardRef(render)>
          <ForwardRef>
            <ForwardRef
              active={false}
              as="input"
              className="add-subtask-button"
              disabled={false}
              onClick={[Function]}
              size="sm"
              type="button"
              value="+"
              variant="outline-success"
            />
          </ForwardRef>
          <ForwardRef
            as="input"
            className="new-subtask-text"
            disabled={false}
            maxLength={40}
            minLength={1}
            onKeyPress={[Function]}
            placeholder="Enter subtask text here..."
            size="sm"
          />
        </ForwardRef(render)>,
        "className": "px-0",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              <ForwardRef
                active={false}
                as="input"
                className="add-subtask-button"
                disabled={false}
                onClick={[Function]}
                size="sm"
                type="button"
                value="+"
                variant="outline-success"
              />
            </ForwardRef>,
            <ForwardRef
              as="input"
              className="new-subtask-text"
              disabled={false}
              maxLength={40}
              minLength={1}
              onKeyPress={[Function]}
              placeholder="Enter subtask text here..."
              size="sm"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                active={false}
                as="input"
                className="add-subtask-button"
                disabled={false}
                onClick={[Function]}
                size="sm"
                type="button"
                value="+"
                variant="outline-success"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "as": "input",
                "className": "add-subtask-button",
                "disabled": false,
                "onClick": [Function],
                "size": "sm",
                "type": "button",
                "value": "+",
                "variant": "outline-success",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "InputGroupPrepend",
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "input",
              "className": "new-subtask-text",
              "disabled": false,
              "maxLength": 40,
              "minLength": 1,
              "onKeyPress": [Function],
              "placeholder": "Enter subtask text here...",
              "size": "sm",
            },
            "ref": [Function],
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "Feedback": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "as": "div",
                  "type": "valid",
                },
                "displayName": "Feedback",
                "propTypes": Object {
                  "as": [Function],
                  "type": [Function],
                },
                "render": [Function],
              },
              "defaultProps": Object {
                "as": "input",
              },
              "displayName": "FormControl",
              "render": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "Append": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "InputGroupAppend",
            "render": [Function],
          },
          "Checkbox": [Function],
          "Prepend": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "InputGroupPrepend",
            "render": [Function],
          },
          "Radio": [Function],
          "Text": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "InputGroupText",
            "render": [Function],
          },
          "defaultProps": undefined,
          "displayName": "Bootstrap(InputGroup)",
          "propTypes": undefined,
          "render": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "div",
        },
        "displayName": "Col",
        "render": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": undefined,
      "displayName": "Bootstrap(Row)",
      "propTypes": undefined,
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef
          as="div"
          className="px-0"
        >
          <ForwardRef(render)>
            <ForwardRef>
              <ForwardRef
                active={false}
                as="input"
                className="add-subtask-button"
                disabled={false}
                onClick={[Function]}
                size="sm"
                type="button"
                value="+"
                variant="outline-success"
              />
            </ForwardRef>
            <ForwardRef
              as="input"
              className="new-subtask-text"
              disabled={false}
              maxLength={40}
              minLength={1}
              onKeyPress={[Function]}
              placeholder="Enter subtask text here..."
              size="sm"
            />
          </ForwardRef(render)>
        </ForwardRef>,
        "className": "mb-0 mt-3 mx-0",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "div",
          "children": <ForwardRef(render)>
            <ForwardRef>
              <ForwardRef
                active={false}
                as="input"
                className="add-subtask-button"
                disabled={false}
                onClick={[Function]}
                size="sm"
                type="button"
                value="+"
                variant="outline-success"
              />
            </ForwardRef>
            <ForwardRef
              as="input"
              className="new-subtask-text"
              disabled={false}
              maxLength={40}
              minLength={1}
              onKeyPress={[Function]}
              placeholder="Enter subtask text here..."
              size="sm"
            />
          </ForwardRef(render)>,
          "className": "px-0",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                <ForwardRef
                  active={false}
                  as="input"
                  className="add-subtask-button"
                  disabled={false}
                  onClick={[Function]}
                  size="sm"
                  type="button"
                  value="+"
                  variant="outline-success"
                />
              </ForwardRef>,
              <ForwardRef
                as="input"
                className="new-subtask-text"
                disabled={false}
                maxLength={40}
                minLength={1}
                onKeyPress={[Function]}
                placeholder="Enter subtask text here..."
                size="sm"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  active={false}
                  as="input"
                  className="add-subtask-button"
                  disabled={false}
                  onClick={[Function]}
                  size="sm"
                  type="button"
                  value="+"
                  variant="outline-success"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "as": "input",
                  "className": "add-subtask-button",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "sm",
                  "type": "button",
                  "value": "+",
                  "variant": "outline-success",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "displayName": "InputGroupPrepend",
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "input",
                "className": "new-subtask-text",
                "disabled": false,
                "maxLength": 40,
                "minLength": 1,
                "onKeyPress": [Function],
                "placeholder": "Enter subtask text here...",
                "size": "sm",
              },
              "ref": [Function],
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "Feedback": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "as": "div",
                    "type": "valid",
                  },
                  "displayName": "Feedback",
                  "propTypes": Object {
                    "as": [Function],
                    "type": [Function],
                  },
                  "render": [Function],
                },
                "defaultProps": Object {
                  "as": "input",
                },
                "displayName": "FormControl",
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "Append": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "InputGroupAppend",
              "render": [Function],
            },
            "Checkbox": [Function],
            "Prepend": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "InputGroupPrepend",
              "render": [Function],
            },
            "Radio": [Function],
            "Text": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "InputGroupText",
              "render": [Function],
            },
            "defaultProps": undefined,
            "displayName": "Bootstrap(InputGroup)",
            "propTypes": undefined,
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
          },
          "displayName": "Col",
          "render": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "Bootstrap(Row)",
        "propTypes": undefined,
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
