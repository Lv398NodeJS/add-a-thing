// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TaskItem /> should match snapshot when render name from props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskItem
    taskName="Task 1"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "div",
      "children": Array [
        <ForwardRef
          as="div"
          data-test="taskContainer"
          draggable="true"
          fluid="false"
          onClick={[Function]}
          onDragEnd={[Function]}
          onDragStart={[Function]}
        >
          <ForwardRef
            as="div"
            xs={11}
          >
            <ForwardRef(render)>
              <ForwardRef
                as="div"
                data-test="taskName"
                fluid={false}
              >
                <span>
                  Task 1
                </span>
              </ForwardRef>
            </ForwardRef(render)>
            <ForwardRef(render)>
              <ForwardRef
                as="div"
                fluid={false}
              >
                <ForwardRef
                  pill={false}
                  variant="secondary"
                >
                  0 / 0
                </ForwardRef>
              </ForwardRef>
            </ForwardRef(render)>
          </ForwardRef>
          <ForwardRef
            as="div"
            className="d-flex align-items-center m-0 p-0"
            xs={1}
          >
            <ForwardRef
              active={false}
              className="delete-button"
              disabled={false}
              onClick={[Function]}
              onMouseLeave={[Function]}
              size="sm"
              type="button"
              variant="light"
            >
              <img
                alt="delete.svg"
                className="delete-icon"
                draggable="false"
                src="delete.svg"
              />
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef
          as="div"
          fluid={false}
        >
          <TaskDetailsModal
            data-test="taskDetails"
            onClose={[Function]}
            show={false}
            taskRef={20}
          />
        </ForwardRef>,
      ],
      "className": "p-0",
      "fluid": "true",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "div",
          "children": Array [
            <ForwardRef
              as="div"
              xs={11}
            >
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  data-test="taskName"
                  fluid={false}
                >
                  <span>
                    Task 1
                  </span>
                </ForwardRef>
              </ForwardRef(render)>
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  fluid={false}
                >
                  <ForwardRef
                    pill={false}
                    variant="secondary"
                  >
                    0 / 0
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef(render)>
            </ForwardRef>,
            <ForwardRef
              as="div"
              className="d-flex align-items-center m-0 p-0"
              xs={1}
            >
              <ForwardRef
                active={false}
                className="delete-button"
                disabled={false}
                onClick={[Function]}
                onMouseLeave={[Function]}
                size="sm"
                type="button"
                variant="light"
              >
                <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />
              </ForwardRef>
            </ForwardRef>,
          ],
          "className": undefined,
          "data-test": "taskContainer",
          "draggable": "true",
          "fluid": "false",
          "id": undefined,
          "onClick": [Function],
          "onDragEnd": [Function],
          "onDragStart": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": Array [
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    data-test="taskName"
                    fluid={false}
                  >
                    <span>
                      Task 1
                    </span>
                  </ForwardRef>
                </ForwardRef(render)>,
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    fluid={false}
                  >
                    <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef(render)>,
              ],
              "xs": 11,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    as="div"
                    data-test="taskName"
                    fluid={false}
                  >
                    <span>
                      Task 1
                    </span>
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "div",
                    "children": <span>
                      Task 1
                    </span>,
                    "className": undefined,
                    "data-test": "taskName",
                    "fluid": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Task 1",
                    },
                    "ref": null,
                    "rendered": "Task 1",
                    "type": "span",
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                      "fluid": false,
                    },
                    "displayName": "Container",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "displayName": "Bootstrap(Row)",
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    as="div"
                    fluid={false}
                  >
                    <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "div",
                    "children": <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>,
                    "fluid": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "0 / 0",
                      "pill": false,
                      "variant": "secondary",
                    },
                    "ref": null,
                    "rendered": "0 / 0",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "pill": false,
                      },
                      "displayName": "Badge",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                      "fluid": false,
                    },
                    "displayName": "Container",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "displayName": "Bootstrap(Row)",
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <ForwardRef
                active={false}
                className="delete-button"
                disabled={false}
                onClick={[Function]}
                onMouseLeave={[Function]}
                size="sm"
                type="button"
                variant="light"
              >
                <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />
              </ForwardRef>,
              "className": "d-flex align-items-center m-0 p-0",
              "xs": 1,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "children": <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />,
                "className": "delete-button",
                "disabled": false,
                "onClick": [Function],
                "onMouseLeave": [Function],
                "size": "sm",
                "type": "button",
                "variant": "light",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "delete.svg",
                  "className": "delete-icon",
                  "draggable": "false",
                  "src": "delete.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
            "fluid": false,
          },
          "displayName": "Container",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "div",
          "children": <TaskDetailsModal
            data-test="taskDetails"
            onClose={[Function]}
            show={false}
            taskRef={20}
          />,
          "fluid": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data-test": "taskDetails",
            "onClose": [Function],
            "show": false,
            "taskRef": 20,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
            "fluid": false,
          },
          "displayName": "Container",
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": Object {
        "as": "div",
        "fluid": false,
      },
      "displayName": "Container",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "children": Array [
          <ForwardRef
            as="div"
            data-test="taskContainer"
            draggable="true"
            fluid="false"
            onClick={[Function]}
            onDragEnd={[Function]}
            onDragStart={[Function]}
          >
            <ForwardRef
              as="div"
              xs={11}
            >
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  data-test="taskName"
                  fluid={false}
                >
                  <span>
                    Task 1
                  </span>
                </ForwardRef>
              </ForwardRef(render)>
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  fluid={false}
                >
                  <ForwardRef
                    pill={false}
                    variant="secondary"
                  >
                    0 / 0
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef(render)>
            </ForwardRef>
            <ForwardRef
              as="div"
              className="d-flex align-items-center m-0 p-0"
              xs={1}
            >
              <ForwardRef
                active={false}
                className="delete-button"
                disabled={false}
                onClick={[Function]}
                onMouseLeave={[Function]}
                size="sm"
                type="button"
                variant="light"
              >
                <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef
            as="div"
            fluid={false}
          >
            <TaskDetailsModal
              data-test="taskDetails"
              onClose={[Function]}
              show={false}
              taskRef={20}
            />
          </ForwardRef>,
        ],
        "className": "p-0",
        "fluid": "true",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": Array [
              <ForwardRef
                as="div"
                xs={11}
              >
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    data-test="taskName"
                    fluid={false}
                  >
                    <span>
                      Task 1
                    </span>
                  </ForwardRef>
                </ForwardRef(render)>
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    fluid={false}
                  >
                    <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef(render)>
              </ForwardRef>,
              <ForwardRef
                as="div"
                className="d-flex align-items-center m-0 p-0"
                xs={1}
              >
                <ForwardRef
                  active={false}
                  className="delete-button"
                  disabled={false}
                  onClick={[Function]}
                  onMouseLeave={[Function]}
                  size="sm"
                  type="button"
                  variant="light"
                >
                  <img
                    alt="delete.svg"
                    className="delete-icon"
                    draggable="false"
                    src="delete.svg"
                  />
                </ForwardRef>
              </ForwardRef>,
            ],
            "className": undefined,
            "data-test": "taskContainer",
            "draggable": "true",
            "fluid": "false",
            "id": undefined,
            "onClick": [Function],
            "onDragEnd": [Function],
            "onDragStart": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "div",
                "children": Array [
                  <ForwardRef(render)>
                    <ForwardRef
                      as="div"
                      data-test="taskName"
                      fluid={false}
                    >
                      <span>
                        Task 1
                      </span>
                    </ForwardRef>
                  </ForwardRef(render)>,
                  <ForwardRef(render)>
                    <ForwardRef
                      as="div"
                      fluid={false}
                    >
                      <ForwardRef
                        pill={false}
                        variant="secondary"
                      >
                        0 / 0
                      </ForwardRef>
                    </ForwardRef>
                  </ForwardRef(render)>,
                ],
                "xs": 11,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      as="div"
                      data-test="taskName"
                      fluid={false}
                    >
                      <span>
                        Task 1
                      </span>
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "div",
                      "children": <span>
                        Task 1
                      </span>,
                      "className": undefined,
                      "data-test": "taskName",
                      "fluid": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Task 1",
                      },
                      "ref": null,
                      "rendered": "Task 1",
                      "type": "span",
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                        "fluid": false,
                      },
                      "displayName": "Container",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "Bootstrap(Row)",
                    "propTypes": undefined,
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      as="div"
                      fluid={false}
                    >
                      <ForwardRef
                        pill={false}
                        variant="secondary"
                      >
                        0 / 0
                      </ForwardRef>
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "div",
                      "children": <ForwardRef
                        pill={false}
                        variant="secondary"
                      >
                        0 / 0
                      </ForwardRef>,
                      "fluid": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "0 / 0",
                        "pill": false,
                        "variant": "secondary",
                      },
                      "ref": null,
                      "rendered": "0 / 0",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "pill": false,
                        },
                        "displayName": "Badge",
                        "render": [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                        "fluid": false,
                      },
                      "displayName": "Container",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "Bootstrap(Row)",
                    "propTypes": undefined,
                    "render": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "as": "div",
                },
                "displayName": "Col",
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "div",
                "children": <ForwardRef
                  active={false}
                  className="delete-button"
                  disabled={false}
                  onClick={[Function]}
                  onMouseLeave={[Function]}
                  size="sm"
                  type="button"
                  variant="light"
                >
                  <img
                    alt="delete.svg"
                    className="delete-icon"
                    draggable="false"
                    src="delete.svg"
                  />
                </ForwardRef>,
                "className": "d-flex align-items-center m-0 p-0",
                "xs": 1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "children": <img
                    alt="delete.svg"
                    className="delete-icon"
                    draggable="false"
                    src="delete.svg"
                  />,
                  "className": "delete-button",
                  "disabled": false,
                  "onClick": [Function],
                  "onMouseLeave": [Function],
                  "size": "sm",
                  "type": "button",
                  "variant": "light",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "delete.svg",
                    "className": "delete-icon",
                    "draggable": "false",
                    "src": "delete.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "as": "div",
                },
                "displayName": "Col",
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
              "fluid": false,
            },
            "displayName": "Container",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <TaskDetailsModal
              data-test="taskDetails"
              onClose={[Function]}
              show={false}
              taskRef={20}
            />,
            "fluid": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "data-test": "taskDetails",
              "onClose": [Function],
              "show": false,
              "taskRef": 20,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
              "fluid": false,
            },
            "displayName": "Container",
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "div",
          "fluid": false,
        },
        "displayName": "Container",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<TaskItem /> should render and match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskItem
    taskListRef=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "div",
      "children": Array [
        <ForwardRef
          as="div"
          data-test="taskContainer"
          draggable="true"
          fluid="false"
          onClick={[Function]}
          onDragEnd={[Function]}
          onDragStart={[Function]}
        >
          <ForwardRef
            as="div"
            xs={11}
          >
            <ForwardRef(render)>
              <ForwardRef
                as="div"
                data-test="taskName"
                fluid={false}
              >
                <span />
              </ForwardRef>
            </ForwardRef(render)>
            <ForwardRef(render)>
              <ForwardRef
                as="div"
                fluid={false}
              >
                <ForwardRef
                  pill={false}
                  variant="secondary"
                >
                  0 / 0
                </ForwardRef>
              </ForwardRef>
            </ForwardRef(render)>
          </ForwardRef>
          <ForwardRef
            as="div"
            className="d-flex align-items-center m-0 p-0"
            xs={1}
          >
            <ForwardRef
              active={false}
              className="delete-button"
              disabled={false}
              onClick={[Function]}
              onMouseLeave={[Function]}
              size="sm"
              type="button"
              variant="light"
            >
              <img
                alt="delete.svg"
                className="delete-icon"
                draggable="false"
                src="delete.svg"
              />
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef
          as="div"
          fluid={false}
        >
          <TaskDetailsModal
            data-test="taskDetails"
            onClose={[Function]}
            show={false}
          />
        </ForwardRef>,
      ],
      "className": "p-0",
      "fluid": "true",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "div",
          "children": Array [
            <ForwardRef
              as="div"
              xs={11}
            >
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  data-test="taskName"
                  fluid={false}
                >
                  <span />
                </ForwardRef>
              </ForwardRef(render)>
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  fluid={false}
                >
                  <ForwardRef
                    pill={false}
                    variant="secondary"
                  >
                    0 / 0
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef(render)>
            </ForwardRef>,
            <ForwardRef
              as="div"
              className="d-flex align-items-center m-0 p-0"
              xs={1}
            >
              <ForwardRef
                active={false}
                className="delete-button"
                disabled={false}
                onClick={[Function]}
                onMouseLeave={[Function]}
                size="sm"
                type="button"
                variant="light"
              >
                <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />
              </ForwardRef>
            </ForwardRef>,
          ],
          "className": undefined,
          "data-test": "taskContainer",
          "draggable": "true",
          "fluid": "false",
          "id": undefined,
          "onClick": [Function],
          "onDragEnd": [Function],
          "onDragStart": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": Array [
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    data-test="taskName"
                    fluid={false}
                  >
                    <span />
                  </ForwardRef>
                </ForwardRef(render)>,
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    fluid={false}
                  >
                    <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef(render)>,
              ],
              "xs": 11,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    as="div"
                    data-test="taskName"
                    fluid={false}
                  >
                    <span />
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "div",
                    "children": <span />,
                    "className": undefined,
                    "data-test": "taskName",
                    "fluid": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                      "fluid": false,
                    },
                    "displayName": "Container",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "displayName": "Bootstrap(Row)",
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    as="div"
                    fluid={false}
                  >
                    <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "div",
                    "children": <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>,
                    "fluid": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "0 / 0",
                      "pill": false,
                      "variant": "secondary",
                    },
                    "ref": null,
                    "rendered": "0 / 0",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "pill": false,
                      },
                      "displayName": "Badge",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                      "fluid": false,
                    },
                    "displayName": "Container",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "displayName": "Bootstrap(Row)",
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "div",
              "children": <ForwardRef
                active={false}
                className="delete-button"
                disabled={false}
                onClick={[Function]}
                onMouseLeave={[Function]}
                size="sm"
                type="button"
                variant="light"
              >
                <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />
              </ForwardRef>,
              "className": "d-flex align-items-center m-0 p-0",
              "xs": 1,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "active": false,
                "children": <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />,
                "className": "delete-button",
                "disabled": false,
                "onClick": [Function],
                "onMouseLeave": [Function],
                "size": "sm",
                "type": "button",
                "variant": "light",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "delete.svg",
                  "className": "delete-icon",
                  "draggable": "false",
                  "src": "delete.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "as": "div",
              },
              "displayName": "Col",
              "render": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
            "fluid": false,
          },
          "displayName": "Container",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "div",
          "children": <TaskDetailsModal
            data-test="taskDetails"
            onClose={[Function]}
            show={false}
          />,
          "fluid": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data-test": "taskDetails",
            "onClose": [Function],
            "show": false,
            "taskRef": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "div",
            "fluid": false,
          },
          "displayName": "Container",
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": Object {
        "as": "div",
        "fluid": false,
      },
      "displayName": "Container",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "children": Array [
          <ForwardRef
            as="div"
            data-test="taskContainer"
            draggable="true"
            fluid="false"
            onClick={[Function]}
            onDragEnd={[Function]}
            onDragStart={[Function]}
          >
            <ForwardRef
              as="div"
              xs={11}
            >
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  data-test="taskName"
                  fluid={false}
                >
                  <span />
                </ForwardRef>
              </ForwardRef(render)>
              <ForwardRef(render)>
                <ForwardRef
                  as="div"
                  fluid={false}
                >
                  <ForwardRef
                    pill={false}
                    variant="secondary"
                  >
                    0 / 0
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef(render)>
            </ForwardRef>
            <ForwardRef
              as="div"
              className="d-flex align-items-center m-0 p-0"
              xs={1}
            >
              <ForwardRef
                active={false}
                className="delete-button"
                disabled={false}
                onClick={[Function]}
                onMouseLeave={[Function]}
                size="sm"
                type="button"
                variant="light"
              >
                <img
                  alt="delete.svg"
                  className="delete-icon"
                  draggable="false"
                  src="delete.svg"
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef
            as="div"
            fluid={false}
          >
            <TaskDetailsModal
              data-test="taskDetails"
              onClose={[Function]}
              show={false}
            />
          </ForwardRef>,
        ],
        "className": "p-0",
        "fluid": "true",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": Array [
              <ForwardRef
                as="div"
                xs={11}
              >
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    data-test="taskName"
                    fluid={false}
                  >
                    <span />
                  </ForwardRef>
                </ForwardRef(render)>
                <ForwardRef(render)>
                  <ForwardRef
                    as="div"
                    fluid={false}
                  >
                    <ForwardRef
                      pill={false}
                      variant="secondary"
                    >
                      0 / 0
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef(render)>
              </ForwardRef>,
              <ForwardRef
                as="div"
                className="d-flex align-items-center m-0 p-0"
                xs={1}
              >
                <ForwardRef
                  active={false}
                  className="delete-button"
                  disabled={false}
                  onClick={[Function]}
                  onMouseLeave={[Function]}
                  size="sm"
                  type="button"
                  variant="light"
                >
                  <img
                    alt="delete.svg"
                    className="delete-icon"
                    draggable="false"
                    src="delete.svg"
                  />
                </ForwardRef>
              </ForwardRef>,
            ],
            "className": undefined,
            "data-test": "taskContainer",
            "draggable": "true",
            "fluid": "false",
            "id": undefined,
            "onClick": [Function],
            "onDragEnd": [Function],
            "onDragStart": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "div",
                "children": Array [
                  <ForwardRef(render)>
                    <ForwardRef
                      as="div"
                      data-test="taskName"
                      fluid={false}
                    >
                      <span />
                    </ForwardRef>
                  </ForwardRef(render)>,
                  <ForwardRef(render)>
                    <ForwardRef
                      as="div"
                      fluid={false}
                    >
                      <ForwardRef
                        pill={false}
                        variant="secondary"
                      >
                        0 / 0
                      </ForwardRef>
                    </ForwardRef>
                  </ForwardRef(render)>,
                ],
                "xs": 11,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      as="div"
                      data-test="taskName"
                      fluid={false}
                    >
                      <span />
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "div",
                      "children": <span />,
                      "className": undefined,
                      "data-test": "taskName",
                      "fluid": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "span",
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                        "fluid": false,
                      },
                      "displayName": "Container",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "Bootstrap(Row)",
                    "propTypes": undefined,
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      as="div"
                      fluid={false}
                    >
                      <ForwardRef
                        pill={false}
                        variant="secondary"
                      >
                        0 / 0
                      </ForwardRef>
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "div",
                      "children": <ForwardRef
                        pill={false}
                        variant="secondary"
                      >
                        0 / 0
                      </ForwardRef>,
                      "fluid": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "0 / 0",
                        "pill": false,
                        "variant": "secondary",
                      },
                      "ref": null,
                      "rendered": "0 / 0",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "pill": false,
                        },
                        "displayName": "Badge",
                        "render": [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                        "fluid": false,
                      },
                      "displayName": "Container",
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "Bootstrap(Row)",
                    "propTypes": undefined,
                    "render": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "as": "div",
                },
                "displayName": "Col",
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "div",
                "children": <ForwardRef
                  active={false}
                  className="delete-button"
                  disabled={false}
                  onClick={[Function]}
                  onMouseLeave={[Function]}
                  size="sm"
                  type="button"
                  variant="light"
                >
                  <img
                    alt="delete.svg"
                    className="delete-icon"
                    draggable="false"
                    src="delete.svg"
                  />
                </ForwardRef>,
                "className": "d-flex align-items-center m-0 p-0",
                "xs": 1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active": false,
                  "children": <img
                    alt="delete.svg"
                    className="delete-icon"
                    draggable="false"
                    src="delete.svg"
                  />,
                  "className": "delete-button",
                  "disabled": false,
                  "onClick": [Function],
                  "onMouseLeave": [Function],
                  "size": "sm",
                  "type": "button",
                  "variant": "light",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "delete.svg",
                    "className": "delete-icon",
                    "draggable": "false",
                    "src": "delete.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "as": "div",
                },
                "displayName": "Col",
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
              "fluid": false,
            },
            "displayName": "Container",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "div",
            "children": <TaskDetailsModal
              data-test="taskDetails"
              onClose={[Function]}
              show={false}
            />,
            "fluid": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "data-test": "taskDetails",
              "onClose": [Function],
              "show": false,
              "taskRef": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "as": "div",
              "fluid": false,
            },
            "displayName": "Container",
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "div",
          "fluid": false,
        },
        "displayName": "Container",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
